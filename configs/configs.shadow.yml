server:
    hostname: :SERVER_HOSTNAME
email:
    daily_email:
        from: :EMAIL_DAILY_EMAIL_FROM
        from_name: :EMAIL_DAILY_EMAIL_FROM_NAME
        subject: :EMAIL_DAILY_EMAIL_SUBJECT
security:
    secret: :SECURITY_SECRET
mysql:
    host: :MYSQL_HOST
    database: :MYSQL_DATABASE
    user: :MYSQL_USER
    password: :MYSQL_PASSWORD
service:
    pocket:
        consumer_key: :POCKET_CONSUMER_KEY
    flickr:
        key: :FLICKR_KEY
        secret: :FLICKR_SECRET
    gdrive:
        client_json_config_filename: gdrive_client.json
        thumbnail_cache_folder: cache/gdrive/thumbnails
    instagram:
        client_id: :INSTAGRAM_CLIENT_ID
        client_secret: :INSTAGRAM_CLIENT_SECRET
    spotify:
        client_id: :SPOTIFY_CLIENT_ID
        client_secret: :SPOTIFY_CLIENT_SECRET
    vimeo:
        client_key: :VIMEO_CLIENT_ID
        client_secret: :VIMEO_CLIENT_SECRET
sql:
    users:
        insert: |
            INSERT INTO users
            (username, email, password, date_added, date_updated)
            VALUES
            (:username, :email, :password, NOW(), NOW())
                ON DUPLICATE KEY UPDATE username = :username, date_updated = NOW()
        get_all: |
            SELECT id, username, email FROM users ORDER BY id
        get_app_users: |
            SELECT id, username, email, notifications FROM users WHERE app_user = 'Y' ORDER BY id
        get_by_auth_token: |
            SELECT id, username, email FROM users WHERE auth_token = :auth_token
        get_by_id: |
            SELECT id, username, email FROM users WHERE id = :id
        get_by_email: |
            SELECT id, username, email FROM users WHERE email = :email
        get_by_username: |
            SELECT id, username, email FROM users WHERE username = :username
        select_by_username_and_password: |
            SELECT id, email, username
            FROM `users`
            WHERE username = :username
            AND password = :password
    account_flickr:
        insert_update: |
            INSERT INTO account_flickr
            (user_id, flickr_user_id, access_token, access_token_secret, date_added, date_updated)
            VALUES
            (:user_id, :flickr_user_id, :access_token, :access_token_secret,  NOW(), NOW())
                ON DUPLICATE KEY UPDATE flickr_user_id = :flickr_user_id, access_token = :access_token, access_token_secret = :access_token_secret, date_updated = NOW()
        get_all: |
            SELECT * FROM account_flickr
        get_by_user_id: |
            SELECT * FROM account_flickr WHERE user_id = :user_id
    account_instagram:
        insert_update_instagram_user: |
            INSERT INTO account_instagram
            (user_id, access_token, date_added, date_updated)
            VALUES
            (:user_id, :access_token, NOW(), NOW())
                ON DUPLICATE KEY UPDATE access_token = :access_token, date_updated = NOW()
        get_all: |
            SELECT * FROM account_instagram
        get_by_user_id: |
            SELECT * FROM account_instagram WHERE user_id = :user_id
    account_pocket:
        insert_update_pocket_user: |
            INSERT INTO account_pocket
            (user_id, username, access_token, date_added, date_updated)
            VALUES
            (:user_id, :username, :access_token, NOW(), NOW())
                ON DUPLICATE KEY UPDATE access_token = :access_token, date_updated = NOW()
        get_all: |
            SELECT * FROM account_pocket
        get_by_user_id: |
            SELECT * FROM account_pocket WHERE user_id = :user_id
    account_gdrive:
        insert_update_gdrive_user: |
            INSERT INTO account_gdrive
            (user_id, access_token, refresh_token, date_added, date_updated)
            VALUES
            (:user_id, :access_token, :refresh_token, NOW(), NOW())
                ON DUPLICATE KEY UPDATE access_token = :access_token, refresh_token = :refresh_token, date_updated = NOW()
        get_all: |
            SELECT * FROM account_gdrive
        get_by_user_id: |
            SELECT * FROM account_gdrive WHERE user_id = :user_id
    account_spotify:
        insert_update: |
            INSERT INTO account_spotify
            (user_id, access_token, refresh_token, date_added, date_updated)
            VALUES
            (:user_id, :access_token, :refresh_token, NOW(), NOW())
                ON DUPLICATE KEY UPDATE access_token = :access_token, refresh_token = :refresh_token, date_updated = NOW()
        get_all: |
            SELECT * FROM account_spotify
        get_by_user_id: |
            SELECT * FROM account_spotify WHERE user_id = :user_id
    account_vimeo:
        insert_update: |
            INSERT INTO account_vimeo
            (user_id, username, access_token, date_added, date_updated)
            VALUES
            (:user_id, :username, :access_token, NOW(), NOW())
                ON DUPLICATE KEY UPDATE access_token = :access_token, date_updated = NOW()
        get_all: |
            SELECT * FROM account_vimeo
        get_by_user_id: |
            SELECT * FROM account_vimeo WHERE user_id = :user_id
    content_flickr:
        insert_update: |
            INSERT INTO content_flickr
            (account_flickr_id, user_id, item_id, json, date_added, date_updated)
            VALUES
            (:account_flickr_id, :user_id, :item_id, :json, :date_added, :date_updated)
                ON DUPLICATE KEY UPDATE json = :json, date_updated = :date_updated
        delete_content: |
            DELETE FROM content_flickr
            WHERE account_flickr_id = :account_flickr_id
        get_by_account_flickr_id: |
            SELECT * FROM content_flickr
            WHERE account_flickr_id = :account_flickr_id
            ORDER BY date_added DESC
            LIMIT :limit
    content_pocket:
        insert_update_pocket_content_for_user: |
            INSERT INTO content_pocket
            (account_pocket_id, user_id, item_id, json, date_added, date_updated)
            VALUES
            (:account_pocket_id, :user_id, :item_id, :json, :date_added, :date_updated)
                ON DUPLICATE KEY UPDATE json = :json, date_updated = :date_updated
        delete_content_for_user: |
            DELETE FROM content_pocket
            WHERE account_pocket_id = :account_pocket_id
        get_by_account_pocket_id: |
            SELECT * FROM content_pocket
            WHERE account_pocket_id = :account_pocket_id
            ORDER BY date_added DESC
            LIMIT :limit
    content_gdrive_files:
        insert_update_files_for_user: |
            INSERT INTO content_gdrive_files
            (account_gdrive_id, user_id, item_id, json, date_added, date_updated)
            VALUES
            (:account_gdrive_id, :user_id, :item_id, :json, :date_added, :date_updated)
                ON DUPLICATE KEY UPDATE json = :json, date_updated = :date_updated
        delete_content_for_user: |
            DELETE FROM content_gdrive_files
            WHERE account_gdrive_id = :account_gdrive_id
        get_by_account_gdrive_id: |
            SELECT * FROM content_gdrive_files
            WHERE account_gdrive_id = :account_gdrive_id
            ORDER BY date_updated DESC
            LIMIT :limit
    content_youtube:
        # insert / update file modification data from user's drive
        insert_update_content_for_user: |
            INSERT INTO content_youtube
            (account_gdrive_id, user_id, item_id, json, date_added, date_updated)
            VALUES
            (:account_gdrive_id, :user_id, :item_id, :json, :date_added, :date_updated)
                ON DUPLICATE KEY UPDATE json = :json, date_updated = :date_updated
        delete_content_for_user: |
            DELETE FROM content_youtube
            WHERE account_gdrive_id = :account_gdrive_id
        get_by_account_gdrive_id: |
            SELECT * FROM content_youtube
            WHERE account_gdrive_id = :account_gdrive_id
            ORDER BY date_updated DESC
            LIMIT :limit
    content_spotify:
        insert_update: |
            INSERT INTO content_spotify
            (account_spotify_id, user_id, item_id, json, date_added, date_updated)
            VALUES
            (:account_spotify_id, :user_id, :item_id, :json, :date_added, :date_updated)
                ON DUPLICATE KEY UPDATE json = :json, date_updated = :date_updated
        delete_content: |
            DELETE FROM content_spotify
            WHERE account_spotify_id = :account_spotify_id
        get_by_account_spotify_id: |
            SELECT * FROM content_spotify
            WHERE account_spotify_id = :account_spotify_id
            ORDER BY date_added DESC
            LIMIT :limit
    content_vimeo:
        insert_update: |
            INSERT INTO content_vimeo
            (account_vimeo_id, user_id, item_id, json, date_added, date_updated)
            VALUES
            (:account_vimeo_id, :user_id, :item_id, :json, :date_added, :date_updated)
                ON DUPLICATE KEY UPDATE json = :json, date_updated = :date_updated
        delete_content: |
            DELETE FROM content_vimeo
            WHERE account_vimeo_id = :account_vimeo_id
        get_by_account_vimeo_id: |
            SELECT * FROM content_vimeo
            WHERE account_vimeo_id = :account_vimeo_id
            ORDER BY date_added DESC
            LIMIT :limit
    comments:
        insert: |
            INSERT INTO comments
            (entity_id, entity_table_name, comment, status, user_id, date_added, date_updated)
            VALUES
            (:entity_id, :entity_table_name, :comment, :status, :user_id, :date_added, NOW())
        get_by_id: |
            SELECT * FROM comments
            WHERE id = :id
        get_by_entity: |
            SELECT c.*, u.username, u.email FROM comments c
            JOIN users u ON c.user_id = u.id
            WHERE entity_table_name = :entity_table_name
            AND entity_id = :entity_id
            ORDER BY date_added ASC
        update: |
            UPDATE comments
            SET
                user_id = :user_id,
                comment = :comment,
                status = :status,
                date_added = :date_added,
                date_updated = NOW()
            WHERE id = :id
    projects:
        insert: |
            INSERT INTO projects
            (user_id, name, description, date_added, date_updated)
            VALUES
            (:user_id, :name, :description, NOW(), NOW())
        select_by_id: |
            SELECT * FROM projects
            WHERE id = :id AND user_id = :user_id
        select_by_user: |
            SELECT * FROM projects
            WHERE user_id = :user_id
            ORDER BY date_updated DESC
        update: |
            UPDATE projects
            SET
                name = :name,
                description = :description,
                date_updated = NOW()
            WHERE id = :id
            AND user_id = :user_id
    project_characters:
        insert: |
            INSERT INTO project_characters
            (project_id, user_id, name, description, sort_order, date_added, date_updated)
            VALUES
            (:project_id, :user_id, :name, :description, :sort_order, NOW(), NOW())
        select_by_project: |
            SELECT * FROM project_characters
            WHERE user_id = :user_id
            AND project_id = :project_id
            ORDER BY sort_order ASC, name DESC
        select_by_id: |
            SELECT * FROM project_characters
            WHERE user_id = :user_id
            AND id = :id
            ORDER BY date_updated DESC
        update: |
            UPDATE project_characters
            SET
                name = :name,
                description = :description,
                date_updated = NOW()
            WHERE id = :id
            AND project_id = :project_id
            AND user_id = :user_id
        update_order: |
            UPDATE project_characters
            SET
                sort_order = :sort_order,
                project_id = :project_id
            WHERE id = :id
            AND user_id = :user_id
    project_character_revisions:
        insert: |
            INSERT INTO project_character_revisions
            (character_id, user_id, content, description, orientation, date_added, date_updated)
            VALUES
            (:character_id, :user_id, :content, :description, :orientation, NOW(), NOW())
        select_by_character: |
            SELECT * FROM project_character_revisions
            WHERE user_id = :user_id
            AND character_id = :character_id
            ORDER BY sort_order ASC
        select_by_id: |
            SELECT * FROM project_character_revisions
            WHERE user_id = :user_id
            AND id = :id
        update: |
            UPDATE project_character_revisions
            SET
                content = :content,
                description = :description,
                orientation = :orientation,
                date_updated = NOW()
            WHERE id = :id
            AND character_id = :character_id
            AND user_id = :user_id
        update_order: |
            UPDATE project_character_revisions
            SET
                sort_order = :sort_order,
                character_id = :character_id
            WHERE id = :id
            AND user_id = :user_id
    project_concept_art:
        insert: |
            INSERT INTO project_concept_art
            (project_id, user_id, name, description, sort_order,  date_added, date_updated)
            VALUES
            (:project_id, :user_id, :name, :description, :sort_order, NOW(), NOW())
        select_by_project: |
            SELECT * FROM project_concept_art
            WHERE user_id = :user_id
            AND project_id = :project_id
            ORDER BY sort_order ASC, name DESC
        select_by_id: |
            SELECT * FROM project_concept_art
            WHERE user_id = :user_id
            AND id = :id
            ORDER BY date_updated DESC
        update: |
            UPDATE project_concept_art
            SET
                name = :name,
                description = :description,
                date_updated = NOW()
            WHERE id = :id
            AND project_id = :project_id
            AND user_id = :user_id
        update_order: |
            UPDATE project_concept_art
            SET
                sort_order = :sort_order,
                project_id = :project_id
            WHERE id = :id
            AND user_id = :user_id
    project_concept_art_revisions:
        insert: |
            INSERT INTO project_concept_art_revisions
            (concept_art_id, user_id, content, description, orientation, date_added, date_updated)
            VALUES
            (:concept_art_id, :user_id, :content, :description, :orientation, NOW(), NOW())
        select_by_concept_art: |
            SELECT * FROM project_concept_art_revisions
            WHERE user_id = :user_id
            AND concept_art_id = :concept_art_id
            ORDER BY date_updated DESC
        select_by_id: |
            SELECT * FROM project_concept_art_revisions
            WHERE user_id = :user_id
            AND id = :id
            ORDER BY date_updated DESC
        update: |
            UPDATE project_concept_art_revisions
            SET
                content = :content,
                description = :description,
                orientation = :orientation,
                date_updated = NOW()
            WHERE id = :id
            AND concept_art_id = :concept_art_id
            AND user_id = :user_id
    project_locations:
        insert: |
            INSERT INTO project_locations
            (project_id, user_id, name, description, content, sort_order, date_added, date_updated)
            VALUES
            (:project_id, :user_id, :name, :description, :content, :sort_order, NOW(), NOW())
        select_by_project: |
            SELECT * FROM project_locations
            WHERE user_id = :user_id
            AND project_id = :project_id
            ORDER BY sort_order ASC, name DESC
        select_by_id: |
            SELECT * FROM project_locations
            WHERE user_id = :user_id
            AND id = :id
            ORDER BY date_updated DESC
        update: |
            UPDATE project_locations
            SET
                name = :name,
                content = :content,
                description = :description,
                date_updated = NOW()
            WHERE id = :id
            AND project_id = :project_id
            AND user_id = :user_id
        update_order: |
            UPDATE project_locations
            SET
                sort_order = :sort_order,
                project_id = :project_id
            WHERE id = :id
            AND user_id = :user_id
    project_reference_images:
        insert: |
            INSERT INTO project_reference_images
            (project_id, user_id, name, description, content, sort_order, orientation, date_added, date_updated)
            VALUES
            (:project_id, :user_id, :name, :description, :content, :sort_order, :orientation, NOW(), NOW())
        select_by_project: |
            SELECT * FROM project_reference_images
            WHERE user_id = :user_id
            AND project_id = :project_id
            ORDER BY sort_order ASC, name DESC
        select_by_id: |
            SELECT * FROM project_reference_images
            WHERE user_id = :user_id
            AND id = :id
            ORDER BY date_updated DESC
        update: |
            UPDATE project_reference_images
            SET
                name = :name,
                content = :content,
                description = :description,
                orientation = :orientation,
                date_updated = NOW()
            WHERE id = :id
            AND project_id = :project_id
            AND user_id = :user_id
        update_order: |
            UPDATE project_reference_images
            SET
                sort_order = :sort_order,
                project_id = :project_id
            WHERE id = :id
            AND user_id = :user_id
    project_storyboards:
        insert: |
            INSERT INTO project_storyboards
            (project_id, user_id, name, description, script, date_added, date_updated)
            VALUES
            (:project_id, :user_id, :name, :description, :script, NOW(), NOW())
        select_by_project: |
            SELECT * FROM project_storyboards
            WHERE user_id = :user_id
            AND project_id = :project_id
            ORDER BY sort_order ASC, name DESC
        select_by_id: |
            SELECT * FROM project_storyboards
            WHERE user_id = :user_id
            AND id = :id
            ORDER BY date_updated DESC
        update: |
            UPDATE project_storyboards
            SET
                name = :name,
                description = :description,
                script = :script,
                date_updated = NOW()
            WHERE id = :id
            AND project_id = :project_id
            AND user_id = :user_id
        update_order: |
            UPDATE project_storyboards
            SET
                sort_order = :sort_order,
                project_id = :project_id
            WHERE id = :id
            AND user_id = :user_id
    project_storyboard_panels:
        insert: |
            INSERT INTO project_storyboard_panels
            (storyboard_id, user_id, name, script, sort_order, date_added, date_updated)
            VALUES
            (:storyboard_id, :user_id, :name, :script, :sort_order, NOW(), NOW())
        select_by_storyboard: |
            SELECT * FROM project_storyboard_panels
            WHERE user_id = :user_id
            AND storyboard_id = :storyboard_id
            ORDER BY sort_order ASC, name DESC
        select_by_id: |
            SELECT * FROM project_storyboard_panels
            WHERE user_id = :user_id
            AND id = :id
            ORDER BY date_updated DESC
        update: |
            UPDATE project_storyboard_panels
            SET
                name = :name,
                script = :script,
                date_updated = NOW()
            WHERE id = :id
            AND storyboard_id = :storyboard_id
            AND user_id = :user_id
        update_order: |
            UPDATE project_storyboard_panels
            SET
                sort_order = :sort_order,
                storyboard_id = :storyboard_id
            WHERE id = :id
            AND user_id = :user_id
            ORDER BY date_added DESC
    project_storyboard_panel_revisions:
        insert: |
            INSERT INTO project_storyboard_panel_revisions
            (panel_id, user_id, content, description, orientation, date_added, date_updated)
            VALUES
            (:panel_id, :user_id, :content, :description, :orientation, NOW(), NOW())
        select_by_panel: |
            SELECT * FROM project_storyboard_panel_revisions
            WHERE user_id = :user_id
            AND panel_id = :panel_id
            ORDER BY sort_order ASC
        select_by_id: |
            SELECT * FROM project_storyboard_panel_revisions
            WHERE user_id = :user_id
            AND id = :id
            ORDER BY sort_order ASC
        update: |
            UPDATE project_storyboard_panel_revisions
            SET
                content = :content,
                description = :description,
                orientation = :orientation,
                date_updated = NOW()
            WHERE id = :id
            AND panel_id = :panel_id
            AND user_id = :user_id
        update_order: |
            UPDATE project_storyboard_panel_revisions
            SET
                sort_order = :sort_order,
                panel_id = :panel_id
            WHERE id = :id
            AND user_id = :user_id
            ORDER BY date_added DESC
    project_users:
        insert: |
            INSERT INTO project_users
            (project_id, project_user_id, user_id, date_added, date_updated)
            VALUES
            (:project_id, :project_user_id, :user_id, NOW(), NOW())
        get_by_project: |
            SELECT u.id, u.username, u.email FROM project_users pu
            JOIN users u on pu.project_user_id = u.id
            WHERE pu.user_id = :user_id
            AND pu.project_id = :project_id
            ORDER BY u.username DESC
    scripts:
        insert: |
            INSERT INTO scripts
            (user_id, title, script, date_added, date_updated)
            VALUES
            (:user_id, :title, :script, NOW(), NOW())
        select_by_id: |
            SELECT * FROM scripts
            WHERE id = :id AND user_id = :user_id
        select_by_user: |
            SELECT * FROM scripts
            WHERE user_id = :user_id
            ORDER BY date_updated DESC
        update: |
            UPDATE scripts
            SET
                title = :title,
                script = :script,
                date_updated = NOW()
            WHERE id = :id
            AND user_id = :user_id
