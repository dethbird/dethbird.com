{% extends 'layout-experiments.html.twig' %}
{% block head %}
<style>
    html, body{
    height: 100%;
    }
    body {
      font-family: "Helvetica", sans;
      color: #666;
      background: black;
      text-align: center;
      height: 2500px;
    }
    .content-object,
    .parallax-object {
      position: absolute;
    }
    #content {
      width: 800px;
      height: 400px;
      top: 800px;
      left: 50%;
      margin-left: -400px;
      background-color: rgba(128, 128, 0, .4);
    }
    #content2 {
      width: 800px;
      height: 400px;
      top: 1600px;
      left: 50%;
      margin-left: -400px;
      background-color: rgba(128, 128, 0, .4);
    }
    #front {
      width: 400px;
      height: 400px;
      top: 500px;
      left: 50%;
      margin-left: -200px;
      background-color: rgba(0, 0, 128, .3);
    }
    #mid {
      width: 500px;
      height: 800px;
      top: 600px;
      left: 50%;
      margin-left: -225px;
      background-color: rgba(128, 0, 0, .3);
    }
    #base {
      top: 0px;
      left: 0px;
      width: 400px;
      height: 400px;
    }
</style>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/gsap/1.18.0/TweenMax.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.5/ScrollMagic.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/ScrollMagic/2.0.5/plugins/debug.addIndicators.min.js"></script>
{% endblock %}
{% block body %}
    {{ parent() }}
<div class="parallax-object" id="base" data-parallax-object-depth="10"><img src="/img/experiments/background-1920-4320.jpg" /></div>
<div class="parallax-object" id="mid" data-parallax-object-depth="5">mid</div>
<div class="parallax-object" id="front" data-parallax-object-depth="3">front</div>
<div class="parallax-object content-object" id="content" data-parallax-object-depth="1"></div>
<div class="parallax-object content-object" id="content2" data-parallax-object-depth="1"></div>
<script type="text/javascript">
  var w = $(window);

  var contentTimeline = new TimelineMax(
    {
      repeat: -1,
      paused: true
    }
  );
  contentTimeline.add( TweenMax.to($('#content'), .25, {
    scale: [1.2, 1.2],
    ease: Power1.easeIn
  }))
  .add( TweenMax.to($('#content'), 1, {
    scale: [1, 1],
    ease: Elastic.easeOut.config(1, 0.3)
  }));
  $('#content').data('timeline', contentTimeline);

  var content2Timeline = new TimelineMax(
    {
      repeat: -1,
      paused: true
    }
  );
  content2Timeline.add( TweenMax.to($('#content2'), .25, {
    scale: [1.2, 1.2],
    ease: Power1.easeIn
  }))
  .add( TweenMax.to($('#content2'), 1, {
    scale: [1, 1],
    ease: Elastic.easeOut.config(1, 0.3)
  }));
  $('#content2').data('timeline', content2Timeline);


  var ParallaxView = Backbone.View.extend({
    parallaxObjects: [],
    contentObjects: [],
    initialize: function() {
      
      var that = this;
      that.parallaxObjects = $('.parallax-object');
      that.contentObjects = $('.content-object');

      /**
       * store some initial state data
       */
      $.each(that.parallaxObjects, function(i,e){
        e = $(e);
        var pos = e.position();
        e.data('top-original', pos.top);
      });
      $.each(that.contentObjects, function(i,e){
        e = $(e);
        e.data('height-original', e.height());
      });

      w.scroll($.debounce(16, true, function(e){
        var s = w.scrollTop();
        var midpointY = w.height()/2 + s;
        $.each(that.parallaxObjects, function(i,e){
          var el = $(e);
          TweenLite.to(e, 1, {
            top: el.data('top-original') - s/el.data('parallax-object-depth'),
            ease: Power1.easeOut
          });
        });
      /**
       * See if mid-screen is intersecting a content object and play/pause its timeline
       */
        $.each(that.contentObjects, function(i,e){

          var el = $(e);
          var pos = el.position();
          var checkTop = pos.top;
          var checkBottom = pos.top + el.height();
          if (
            midpointY > checkTop
            && midpointY < checkBottom
          ) {
            if(!el.data('timeline').isActive()){
              el.data('timeline').play();
            }
          } else {
            el.data('timeline').pause();
          }
        });
      }));
      w.trigger('scroll');
    }
  });


  w.ready(function(){
    var parallaxView = new ParallaxView({
      el: w
    });
  });
</script>
{% endblock %}
